@using AgencyWeb.Models
@using AgencyWeb.Areas.BusinessIndicators.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@model AgencyWeb.Models.SysUsersModel

@inject IHtmlLocalizer<ISInhouseController> HtmlLocalizer

@{
    var confirmDeleteMessage = String.Format(@HtmlLocalizer["ConfirmDeleteMessage"].Value);
    var confirmDeleteTitle = String.Format(@HtmlLocalizer["ConfirmDeleteTitle"].Value);
}

<div class="container-fluid p-0">
    <h1 class="h4 mb-3 form-title"><strong>Xem thu nhập các TVTC</strong></h1>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-header   card-control-filter">
                    <h5 class="card-title mb-0">Tìm kiếm</h5>
                    @(Html.DevExtreme().SelectBox().ID("cboHierarchy")
                        //.DataSource(d => d.WebApi().Area("Functions").Controller("Product").LoadAction("GetPaymodeList"))
                        //.DisplayExpr("PayModeName")
                        //.ValueExpr("PayModeID")
                        .SearchEnabled(true)
                        .DisplayExpr("Name")
                        .ValueExpr("Code")
                        .Value("1")
                        .DataSource(new object[] {
                    new { Code = "1", Name = "Chanel"},
                    new { Code = "2", Name = "Region"},
                    new { Code = "3", Name = "Area"},
                    new { Code = "4", Name = "Zone"},
                    new { Code = "5", Name = "Team"},
                    new { Code = "6", Name = "Unit"},
                    new { Code = "7", Name = "Agent"},
                        })
                        )
                </div>
                <div class="card-body py-3">
                    <div class="row">
                        <div class="col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Tên tài khoản").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Tên TVTC").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Email").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Điện thoại").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>
                    </div>
                    <div class="row button-search-row">
                        <div class="col-md-12">
                            <button class="btn btn-purple-style" type="submit">Xóa điều kiện</button>
                            <button class="btn btn-purple-style" type="submit">Tìm kiếm</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-body py-3">
                    @(Html.DevExtreme().DataGrid()
                        .ID("gridGetISInhouseList")
                        .DataSource(d => d.WebApi()
                        .Area("BusinessIndicators")
                        .Controller("ISInhouse")
                        .LoadAction("GetISInhouse")
                        )
                        .ShowBorders(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Export(e => e.Enabled(true).AllowExportSelectedData(false)).OnExporting("exportingGridISInhouse")
                        .Columns(columns =>
                        {
                            columns.Add().DataField(nameof(SysUsersModelExt.UserId)).Caption("").Width(50).CellTemplate(@<text>
                                <span class="glyphicon glyphicon-eye-open icon-grid" onclick='onViewGetISInhouseClicked("<%= value %>")'></span>
                            </text>).Alignment(HorizontalAlignment.Center);
                            columns.Add().DataField(nameof(SysUsersModelExt.UserId)).Caption("ID").Visible(false);
                            columns.Add().DataField(nameof(SysUsersModelExt.UserName)).Caption("Tên tài khoản");
                            columns.Add().DataField(nameof(SysUsersModelExt.FullName)).Caption("Tên TVTC");
                            columns.Add().DataField(nameof(SysUsersModelExt.Email)).Caption("Email");
                            columns.Add().DataField(nameof(SysUsersModelExt.Phone)).Caption("Số diện thoại");
                            columns.Add().DataField(nameof(SysUsersModelExt.IsActive)).Caption("Hoạt động").DataType(GridColumnDataType.Boolean).Alignment(HorizontalAlignment.Center);
                        })
                        .WordWrapEnabled(true)
                        .ColumnHidingEnabled(true)
                        .AllowColumnResizing(true)
                        .ColumnAutoWidth(true)
                        .ShowRowLines(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(false))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(false)
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        )
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function onViewGetISInhouseClicked(id) {
        window.location.href = '@Url.Action("Detail", "ISInhouse", new { Area = "BusinessIndicators", id = "PARAMETER_ID" })'.replace(/PARAMETER_ID/g, id);
    }
    function Test() {
        console.log(@Html.DisplayFor(model => model.UserName))
    }

    function onRowDblClickGridAgentList() {
        location.href = '@Url.Action("Detail", "ISInhouse", new { area = "BusinessIndicators" })';
    }

    function exportingGridISInhouse(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('ISInhouse');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'ISInhouse.xlsx');
            });
        });
        e.cancel = true;
    }
</script>


