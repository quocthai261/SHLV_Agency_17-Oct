@using AgencyWeb.Models
@using AgencyWeb.Areas.BusinessIndicators.Controllers
@using Microsoft.AspNetCore.Mvc.Localization

@inject IHtmlLocalizer<CandidateController> HtmlLocalizer

@{
    var confirmDeleteMessage = String.Format(@HtmlLocalizer["ConfirmDeleteMessage"].Value);
    var confirmDeleteTitle = String.Format(@HtmlLocalizer["ConfirmDeleteTitle"].Value);
}

<div class="container-fluid p-0">
    <h1 class="h4 mb-3 form-title"><strong>Danh sách ứng viên chưa ra mã số</strong></h1>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-header  card-control-filter">
                    <h5 class="card-title mb-0">Tìm kiếm</h5>
                    @(Html.DevExtreme().SelectBox().ID("cboHierarchy")
                        //.DataSource(d => d.WebApi().Area("Functions").Controller("Product").LoadAction("GetPaymodeList"))
                        //.DisplayExpr("PayModeName")
                        //.ValueExpr("PayModeID")
                        .SearchEnabled(true)
                        .DisplayExpr("Name")
                        .ValueExpr("Code")
                        .Value("1")
                        .DataSource(new object[] {
                    new { Code = "1", Name = "Chanel"},
                    new { Code = "2", Name = "Region"},
                    new { Code = "3", Name = "Area"},
                    new { Code = "4", Name = "Zone"},
                    new { Code = "5", Name = "Team"},
                    new { Code = "6", Name = "Unit"},
                    new { Code = "7", Name = "Candidate"},
                        })
                        )
                </div>
                <div class="card-body py-3">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox().ID("boxFullName").OnValueChanged("SetValueFullName")
                                    .Label("Ứng viên").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                                <input id="txtFullName" hidden />

                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox().ID("boxHierarchy").OnValueChanged("SetValueHierarchy")
                                    .Label("Chức danh").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                                <input id="txtHierarchy" hidden />

                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox().ID("boxIdNumber").OnValueChanged("SetValueIdNumber")
                                    .Label("CMND").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                                <input id="txtIdNumber" hidden />

                            </div>
                        </div>
                    </div>
                    <div class="row button-search-row">
                        <div class="col-md-12">
                            <button id="btnReset" class="btn btn-purple-style" type="submit"><i class="bi bi-trash"></i> Xóa điều kiện</button>
                            <button id="btnSearch" class="btn btn-purple-style" type="submit"><i class="bi bi-search"></i> Tìm kiếm</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-body py-3">
                    @(Html.DevExtreme().DataGrid()
                        .ID("gridCandidateList")
                        .DataSource(d => d.WebApi()
                        .Area("BusinessIndicators")
                        .Controller("Candidate")
                        .LoadAction("GetCandidateList")
                        )
                        .ShowBorders(true)
                        .Export(e => e.Enabled(true).AllowExportSelectedData(false)).OnExporting("exportingGridCandidate")
                        .Columns(columns =>
                        {
                            columns.Add().DataField(nameof(CandidateModel.FullName)).Caption("Ứng viên").MinWidth(150);
                            columns.Add().DataField(nameof(CandidateModel.Hierarchy)).Caption("Chức danh").MinWidth(70);
                            columns.Add().DataField(nameof(CandidateModel.IdNumber)).Caption("CMND").Width(130);
                            columns.Add().DataField(nameof(CandidateModel.DateInput)).Caption("Ngày nhập dữ liệu vào hệ thống").DataType(GridColumnDataType.DateTime).Format("dd/MM/yyyy").Alignment(HorizontalAlignment.Center).Width(150);
                            columns.Add().DataField(nameof(CandidateModel.Avicad)).Caption("Kết quả kiểm AVICAD").Width(150);
                            columns.Add().DataField(nameof(CandidateModel.Document)).Caption("Hồ sơ còn thiếu").Width(140);
                            columns.Add().DataField(nameof(CandidateModel.BasicClassResult)).Caption("Kết quả thi lớp cơ bản").Width(200);
                            columns.Add().DataField(nameof(CandidateModel.MofNo)).Caption("Số Quyết định MOF").Width(200);
                            columns.Add().DataField(nameof(CandidateModel.MofDate)).Caption("Ngày cấp Quyết định MOF").DataType(GridColumnDataType.DateTime).Format("dd/MM/yyyy").Alignment(HorizontalAlignment.Center).Width(150);
                        })
                        .WordWrapEnabled(true)
                        .ColumnHidingEnabled(true)
                        .AllowColumnResizing(true)
                        .ColumnAutoWidth(true)
                        .ShowRowLines(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(false))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(false)
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        )
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (function () {
        $(function () {
            // Filter options.
            var filterOptions = [
                ["Hierarchy", "contains", "txtHierarchy"],
                ["FullName", "contains", "txtFullName"],
                ["IdNumber", "contains", "txtIdNumber"],
            ];

            // Action button.
            var btnSearch = "btnSearch";
            var btnReset = "btnReset";
            var grdData = "gridCandidateList";

            // Get datagrid.
            function getDataGrid() {
                // Get data grid.
                return $("#" + grdData).dxDataGrid("instance");
            }
            // Get filter data.
            function getFilterData() {
                var filters = [];
                // var val1 = $("#fromDate").dxDateBox("instance").option('value');
                // var val2 = $("#toDate").dxDateBox("instance").option('value');
                // if (val1 !== "" && val1 !== null && val2 !== "" && val2 !== null) {
                //     filters.push([
                //         ["CreationDate", ">=", val1],
                //         "and",
                //         ["CreationDate", "<=", val2]
                //     ]);
                // }
                // else {
                //     if (val1 !== "" && val1 !== null) {
                //         filters.push(["CreationDate", ">=", val1]);
                //     }

                //     if (val2 !== "" && val2 !== null) {
                //         filters.push(["CreationDate", "<=", val2]);
                //     }
                // }
                for (var i = 0; i < filterOptions.length; i++) {
                    // Get filter value.
                    var val = $("#" + filterOptions[i][2]).val();
                    if (val !== "") {
                        // Store filter data.
                        filters.push([filterOptions[i][0], filterOptions[i][1], val]);
                    }
                }
                return filters;
            }


            //=============Search Function==============
            function search() {

                // Get data grid.
                var dataGrid = getDataGrid();

                // Get filter data.
                var filterParams = getFilterData();

                if (filterParams.length > 0) dataGrid.filter(filterParams);
                else dataGrid.clearFilter();

            }

            //=============Reset Searchbox Function==============
            function reset() {

                // Reset filter value.
                resetSearchParams();

                // Initialize datagrid.
                var dataGrid = getDataGrid();
                dataGrid.clearFilter();

            }

            // Reset filer method.
            function resetSearchParams() {
                $("#boxHierarchy").dxTextBox("instance").option('value', null);
                $("#boxFullName").dxTextBox("instance").option('value', null);
                $("#boxIdNumber").dxTextBox("instance").option('value', null);
            }

            // On button search click.
            $("#" + btnSearch).click(function () {
                search();
            });

            // On button reset click.
            $("#" + btnReset).click(function () {
                reset();
            });
        });
    })();

    function SetValueHierarchy() {
        var value = $("#boxHierarchy").dxTextBox('instance').option('value');
        $('#txtHierarchy').val(value);
    }
    function SetValueFullName() {
        var value = $("#boxFullName").dxTextBox('instance').option('value');
        $('#txtFullName').val(value);
    }
    function SetValueIdNumber() {
        var value = $("#boxIdNumber").dxTextBox('instance').option('value');
        $('#txtIdNumber').val(value);
    }


    function exportingGridCandidate(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Candidate');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'CandidateList.xlsx');
            });
        });
        e.cancel = true;
    }
</script>

